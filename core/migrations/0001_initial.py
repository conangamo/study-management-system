# Generated by Django 4.2.7 on 2025-08-09 10:26

import core.utils.validators
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Tiêu đề')),
                ('description', models.TextField(verbose_name='Mô tả')),
                ('assignment_type', models.CharField(choices=[('individual', 'Cá nhân'), ('group', 'Nhóm'), ('exam', 'Thi'), ('quiz', 'Kiểm tra'), ('project', 'Đồ án'), ('presentation', 'Thuyết trình'), ('other', 'Khác')], default='individual', max_length=20, verbose_name='Loại bài tập')),
                ('priority', models.CharField(choices=[('low', 'Thấp'), ('medium', 'Trung bình'), ('high', 'Cao'), ('urgent', 'Khẩn cấp')], default='medium', max_length=20, verbose_name='Độ ưu tiên')),
                ('status', models.CharField(choices=[('draft', 'Nháp'), ('published', 'Đã công bố'), ('submission_open', 'Đang nhận bài'), ('submission_closed', 'Đã đóng nhận bài'), ('graded', 'Đã chấm điểm'), ('archived', 'Đã lưu trữ')], default='draft', max_length=20, verbose_name='Trạng thái')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Thời gian tạo')),
                ('published_at', models.DateTimeField(blank=True, null=True, verbose_name='Thời gian công bố')),
                ('due_date', models.DateTimeField(verbose_name='Hạn nộp')),
                ('submission_deadline', models.DateTimeField(verbose_name='Hạn cuối nộp bài')),
                ('max_score', models.DecimalField(decimal_places=2, default=10.0, max_digits=5, verbose_name='Điểm tối đa')),
                ('weight', models.DecimalField(decimal_places=2, default=1.0, max_digits=3, verbose_name='Trọng số')),
                ('attachment', models.FileField(blank=True, null=True, upload_to='assignments/attachments/', verbose_name='File đính kèm')),
                ('allow_late_submission', models.BooleanField(default=False, verbose_name='Cho phép nộp muộn')),
                ('max_submissions', models.IntegerField(default=1, verbose_name='Số lần nộp tối đa')),
                ('is_anonymous', models.BooleanField(default=False, verbose_name='Chấm điểm ẩn danh')),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Bài tập',
                'verbose_name_plural': 'Bài tập',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AssignmentSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('submitted', 'Đã nộp'), ('late', 'Nộp muộn'), ('graded', 'Đã chấm điểm'), ('returned', 'Đã trả bài')], default='submitted', max_length=20, verbose_name='Trạng thái')),
                ('content', models.TextField(blank=True, null=True, verbose_name='Nội dung')),
                ('attachment', models.FileField(blank=True, null=True, upload_to='submissions/attachments/', verbose_name='File đính kèm')),
                ('submitted_at', models.DateTimeField(auto_now_add=True, verbose_name='Thời gian nộp')),
                ('graded_at', models.DateTimeField(blank=True, null=True, verbose_name='Thời gian chấm điểm')),
                ('score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Điểm số')),
                ('feedback', models.TextField(blank=True, null=True, verbose_name='Nhận xét')),
                ('submission_number', models.IntegerField(default=1, verbose_name='Lần nộp thứ')),
                ('is_late', models.BooleanField(default=False, verbose_name='Nộp muộn')),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='core.assignment', verbose_name='Bài tập')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to=settings.AUTH_USER_MODEL, verbose_name='Sinh viên')),
            ],
            options={
                'verbose_name': 'Bài nộp',
                'verbose_name_plural': 'Bài nộp',
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Tên môn học')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='Mã môn học')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Mô tả')),
                ('credits', models.IntegerField(default=3, verbose_name='Số tín chỉ')),
                ('semester', models.CharField(choices=[('1', 'Học kỳ 1'), ('2', 'Học kỳ 2'), ('3', 'Học kỳ 3'), ('summer', 'Học kỳ hè')], max_length=10, verbose_name='Học kỳ')),
                ('academic_year', models.CharField(max_length=9, verbose_name='Năm học')),
                ('start_date', models.DateField(verbose_name='Ngày bắt đầu')),
                ('end_date', models.DateField(verbose_name='Ngày kết thúc')),
                ('status', models.CharField(choices=[('active', 'Đang diễn ra'), ('completed', 'Đã hoàn thành'), ('upcoming', 'Sắp diễn ra'), ('cancelled', 'Đã hủy')], default='upcoming', max_length=20, verbose_name='Trạng thái')),
                ('max_students', models.IntegerField(default=50, verbose_name='Số sinh viên tối đa')),
                ('syllabus', models.TextField(blank=True, null=True, verbose_name='Nội dung môn học')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Môn học',
                'verbose_name_plural': 'Môn học',
                'ordering': ['-academic_year', 'semester', 'name'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('student', 'Sinh viên'), ('teacher', 'Giảng viên'), ('admin', 'Quản trị viên')], default='student', max_length=20)),
                ('phone', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$', 'Số điện thoại không hợp lệ')])),
                ('student_id', models.CharField(blank=True, max_length=50, null=True, validators=[core.utils.validators.validate_student_id_if_provided], verbose_name='Mã sinh viên')),
                ('department', models.CharField(blank=True, choices=[('cntt', 'Công nghệ thông tin'), ('kt', 'Kinh tế'), ('nn', 'Ngoại ngữ'), ('sk', 'Sức khỏe'), ('khac', 'Khác')], max_length=100, null=True)),
                ('year_of_study', models.IntegerField(blank=True, null=True, verbose_name='Năm học')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='Giới thiệu')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Đã xác thực')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_users', to=settings.AUTH_USER_MODEL, verbose_name='Tạo bởi')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Thông tin người dùng',
                'verbose_name_plural': 'Thông tin người dùng',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Tên tag')),
                ('color', models.CharField(default='#007bff', max_length=7, verbose_name='Màu sắc')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Mô tả')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_tags', to=settings.AUTH_USER_MODEL, verbose_name='Tạo bởi')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StudentAccountRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(max_length=50, validators=[core.utils.validators.validate_student_id_if_provided], verbose_name='Mã sinh viên')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('first_name', models.CharField(max_length=30, verbose_name='Họ')),
                ('last_name', models.CharField(max_length=30, verbose_name='Tên')),
                ('department', models.CharField(choices=[('cntt', 'Công nghệ thông tin'), ('kt', 'Kinh tế'), ('nn', 'Ngoại ngữ'), ('sk', 'Sức khỏe'), ('khac', 'Khác')], max_length=100, verbose_name='Khoa/Ngành')),
                ('year_of_study', models.IntegerField(verbose_name='Năm học')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$', 'Số điện thoại không hợp lệ')], verbose_name='Số điện thoại')),
                ('status', models.CharField(choices=[('pending', 'Chờ xử lý'), ('approved', 'Đã duyệt'), ('rejected', 'Từ chối'), ('completed', 'Đã tạo tài khoản')], default='pending', max_length=20, verbose_name='Trạng thái')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Ghi chú')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_student_accounts', to=settings.AUTH_USER_MODEL, verbose_name='Tài khoản được tạo')),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_requests', to=settings.AUTH_USER_MODEL, verbose_name='Yêu cầu bởi')),
            ],
            options={
                'verbose_name': 'Yêu cầu tạo tài khoản sinh viên',
                'verbose_name_plural': 'Yêu cầu tạo tài khoản sinh viên',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PasswordReset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=255, unique=True)),
                ('expires_at', models.DateTimeField()),
                ('used', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='password_resets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Đặt lại mật khẩu',
                'verbose_name_plural': 'Đặt lại mật khẩu',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Tiêu đề')),
                ('content', models.TextField(verbose_name='Nội dung')),
                ('priority', models.CharField(choices=[('low', 'Thấp'), ('medium', 'Trung bình'), ('high', 'Cao'), ('urgent', 'Khẩn cấp')], default='medium', max_length=20, verbose_name='Độ ưu tiên')),
                ('is_important', models.BooleanField(default=False, verbose_name='Quan trọng')),
                ('is_pinned', models.BooleanField(default=False, verbose_name='Ghim')),
                ('is_public', models.BooleanField(default=False, verbose_name='Công khai')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assignment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notes', to='core.assignment', verbose_name='Liên quan đến bài tập')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notes', to='core.course', verbose_name='Liên quan đến môn học')),
                ('tags', models.ManyToManyField(blank=True, related_name='notes', to='core.tag', verbose_name='Tags')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to=settings.AUTH_USER_MODEL, verbose_name='Người dùng')),
            ],
            options={
                'verbose_name': 'Ghi chú',
                'verbose_name_plural': 'Ghi chú',
                'ordering': ['-is_pinned', '-is_important', '-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='LoginHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login_time', models.DateTimeField(auto_now_add=True)),
                ('logout_time', models.DateTimeField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('success', models.BooleanField(default=True)),
                ('failure_reason', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='login_history', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Lịch sử đăng nhập',
                'verbose_name_plural': 'Lịch sử đăng nhập',
                'ordering': ['-login_time'],
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade_type', models.CharField(choices=[('assignment', 'Bài tập'), ('midterm', 'Giữa kỳ'), ('final', 'Cuối kỳ'), ('participation', 'Tham gia'), ('other', 'Khác')], default='assignment', max_length=20, verbose_name='Loại điểm')),
                ('score', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Điểm số')),
                ('max_score', models.DecimalField(decimal_places=2, default=10.0, max_digits=5, verbose_name='Điểm tối đa')),
                ('weight', models.DecimalField(decimal_places=2, default=1.0, max_digits=3, verbose_name='Trọng số')),
                ('date', models.DateField(verbose_name='Ngày chấm điểm')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Nhận xét')),
                ('is_final', models.BooleanField(default=False, verbose_name='Điểm cuối cùng')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assignment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='grades', to='core.assignment', verbose_name='Bài tập')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='core.course', verbose_name='Môn học')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_grades', to=settings.AUTH_USER_MODEL, verbose_name='Chấm điểm bởi')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to=settings.AUTH_USER_MODEL, verbose_name='Sinh viên')),
                ('submission', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='grades', to='core.assignmentsubmission', verbose_name='Bài nộp')),
            ],
            options={
                'verbose_name': 'Điểm số',
                'verbose_name_plural': 'Điểm số',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='CourseEnrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('enrolled', 'Đã đăng ký'), ('dropped', 'Đã rút'), ('completed', 'Đã hoàn thành'), ('failed', 'Trượt')], default='enrolled', max_length=20, verbose_name='Trạng thái')),
                ('enrolled_at', models.DateTimeField(auto_now_add=True, verbose_name='Thời gian đăng ký')),
                ('dropped_at', models.DateTimeField(blank=True, null=True, verbose_name='Thời gian rút')),
                ('final_grade', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Điểm cuối kỳ')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Ghi chú')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='core.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Đăng ký môn học',
                'verbose_name_plural': 'Đăng ký môn học',
                'ordering': ['-enrolled_at'],
            },
        ),
        migrations.AddField(
            model_name='course',
            name='students',
            field=models.ManyToManyField(related_name='enrolled_courses', through='core.CourseEnrollment', to=settings.AUTH_USER_MODEL, verbose_name='Sinh viên đăng ký'),
        ),
        migrations.AddField(
            model_name='course',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teaching_courses', to=settings.AUTH_USER_MODEL, verbose_name='Giảng viên phụ trách'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='core.course', verbose_name='Môn học'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_assignments', to=settings.AUTH_USER_MODEL, verbose_name='Tạo bởi'),
        ),
        migrations.CreateModel(
            name='AccountLockout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('failed_attempts', models.IntegerField(default=0)),
                ('locked_until', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lockouts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Khóa tài khoản',
                'verbose_name_plural': 'Khóa tài khoản',
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('student', 'Sinh viên'), ('teacher', 'Giảng viên'), ('admin', 'Quản trị viên')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Vai trò người dùng',
                'verbose_name_plural': 'Vai trò người dùng',
                'ordering': ['-created_at'],
                'unique_together': {('user', 'role')},
            },
        ),
        migrations.AddIndex(
            model_name='tag',
            index=models.Index(fields=['name'], name='core_tag_name_102daa_idx'),
        ),
        migrations.AddIndex(
            model_name='note',
            index=models.Index(fields=['user'], name='core_note_user_id_384f32_idx'),
        ),
        migrations.AddIndex(
            model_name='note',
            index=models.Index(fields=['is_important'], name='core_note_is_impo_eae0b3_idx'),
        ),
        migrations.AddIndex(
            model_name='note',
            index=models.Index(fields=['is_pinned'], name='core_note_is_pinn_de28a3_idx'),
        ),
        migrations.AddIndex(
            model_name='note',
            index=models.Index(fields=['priority'], name='core_note_priorit_0680fc_idx'),
        ),
        migrations.AddIndex(
            model_name='note',
            index=models.Index(fields=['created_at'], name='core_note_created_3e1589_idx'),
        ),
        migrations.AddIndex(
            model_name='note',
            index=models.Index(fields=['updated_at'], name='core_note_updated_f9f74a_idx'),
        ),
        migrations.AddIndex(
            model_name='grade',
            index=models.Index(fields=['student'], name='core_grade_student_39bee0_idx'),
        ),
        migrations.AddIndex(
            model_name='grade',
            index=models.Index(fields=['course'], name='core_grade_course__ffa701_idx'),
        ),
        migrations.AddIndex(
            model_name='grade',
            index=models.Index(fields=['assignment'], name='core_grade_assignm_fe56cb_idx'),
        ),
        migrations.AddIndex(
            model_name='grade',
            index=models.Index(fields=['grade_type'], name='core_grade_grade_t_faa595_idx'),
        ),
        migrations.AddIndex(
            model_name='grade',
            index=models.Index(fields=['date'], name='core_grade_date_8c1c54_idx'),
        ),
        migrations.AddIndex(
            model_name='courseenrollment',
            index=models.Index(fields=['student'], name='core_course_student_019aaa_idx'),
        ),
        migrations.AddIndex(
            model_name='courseenrollment',
            index=models.Index(fields=['course'], name='core_course_course__6f2a0d_idx'),
        ),
        migrations.AddIndex(
            model_name='courseenrollment',
            index=models.Index(fields=['status'], name='core_course_status_d333c2_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='courseenrollment',
            unique_together={('student', 'course')},
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['teacher'], name='core_course_teacher_22a5f3_idx'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['status'], name='core_course_status_f0af0e_idx'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['academic_year', 'semester'], name='core_course_academi_16c7e9_idx'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['start_date', 'end_date'], name='core_course_start_d_2c3fd9_idx'),
        ),
        migrations.AddIndex(
            model_name='assignmentsubmission',
            index=models.Index(fields=['assignment'], name='core_assign_assignm_afe291_idx'),
        ),
        migrations.AddIndex(
            model_name='assignmentsubmission',
            index=models.Index(fields=['student'], name='core_assign_student_4e98fa_idx'),
        ),
        migrations.AddIndex(
            model_name='assignmentsubmission',
            index=models.Index(fields=['status'], name='core_assign_status_8e2228_idx'),
        ),
        migrations.AddIndex(
            model_name='assignmentsubmission',
            index=models.Index(fields=['submitted_at'], name='core_assign_submitt_081442_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='assignmentsubmission',
            unique_together={('assignment', 'student', 'submission_number')},
        ),
        migrations.AddIndex(
            model_name='assignment',
            index=models.Index(fields=['course'], name='core_assign_course__3043a5_idx'),
        ),
        migrations.AddIndex(
            model_name='assignment',
            index=models.Index(fields=['status'], name='core_assign_status_7d23cd_idx'),
        ),
        migrations.AddIndex(
            model_name='assignment',
            index=models.Index(fields=['due_date'], name='core_assign_due_dat_5b7b5a_idx'),
        ),
        migrations.AddIndex(
            model_name='assignment',
            index=models.Index(fields=['assignment_type'], name='core_assign_assignm_4b7728_idx'),
        ),
        migrations.AddIndex(
            model_name='assignment',
            index=models.Index(fields=['priority'], name='core_assign_priorit_f8fc5b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='accountlockout',
            unique_together={('user', 'ip_address')},
        ),
    ]
